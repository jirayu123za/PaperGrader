import { useState } from 'react';
import { FaBarsStaggered } from 'react-icons/fa6'; // Import FaBarsStaggered ‡∏à‡∏≤‡∏Å react-icons

export default function LeftProcess() {
  const [isCollapsed, setIsCollapsed] = useState(false); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏∏‡∏ö/‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏°‡∏ô‡∏π
  const [selectedOptions, setSelectedOptions] = useState<string[]>(['Edit Outline']); // ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß

  const toggleCollapse = () => {
    setIsCollapsed(!isCollapsed); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏´‡∏∏‡∏ö/‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏°‡∏ô‡∏π
  };

  const toggleOption = (option: string) => {
    setSelectedOptions((prevOptions) =>
      prevOptions.includes(option)
        ? prevOptions.filter((opt) => opt !== option)
        : [...prevOptions, option]
    );
  };

  return (
    <div className={`h-screen flex flex-col justify-between border-r border-gray-300 ${isCollapsed ? 'w-16 p-4' : 'w-64 p-6'} bg-gray-100`}>
      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡πÅ‡∏•‡∏∞‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô */}
      <div className="flex items-center justify-between mb-4">
        <div className={`${isCollapsed ? 'hidden' : 'block'} bg-gray-200 p-2 rounded`}> {/* ‡∏Å‡∏£‡∏≠‡∏ö‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡∏¢‡∏≤‡∏¢ */}
          Logo
        </div>
        <button onClick={toggleCollapse} className="text-sm">
          <FaBarsStaggered
            size={24}
            className={`transition-transform duration-300 ${isCollapsed ? '' : 'transform rotate-180'}`} // ‡πÉ‡∏ä‡πâ transform ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏∏‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
          />
        </button>
      </div>

      {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏°‡∏ô‡∏π */}
      <div className={`flex-grow ${isCollapsed ? 'flex flex-col items-center' : ''}`}>
        {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÄ‡∏ä‡πá‡∏Ñ‡∏ñ‡∏π‡∏Å‡πÅ‡∏°‡πâ‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏´‡∏∏‡∏ö */}
        <div className={`flex flex-col space-y-2 ${isCollapsed ? 'items-center' : ''}`}>
          {['Edit Outline', 'Create rubric', 'Manage Scans', 'Manage Submissions', 'Grade Submissions'].map(option => (
            <button
              key={option}
              onClick={() => toggleOption(option)}
              className={`flex items-center ${isCollapsed ? 'justify-center' : 'px-4 py-2'} rounded ${selectedOptions.includes(option) ? 'bg-blue-100 font-bold' : ''}`}
            >
              {selectedOptions.includes(option) ? '‚úîÔ∏è' : '‚óã'} {isCollapsed ? '' : option}
            </button>
          ))}
        </div>
      </div>

      {/* ‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á */}
      <div className={`flex flex-col space-y-2 mb-4 ${isCollapsed ? 'items-center' : ''}`}>
        <button className="flex items-center px-2 py-1 text-gray-700">
          üîÑ {isCollapsed ? '' : 'Regrade Requests'}
        </button>
        <button className="flex items-center px-2 py-1 text-gray-700">
          üìä {isCollapsed ? '' : 'Statistics'}
        </button>
        <button className="flex items-center px-2 py-1 text-gray-700">
          ‚öôÔ∏è {isCollapsed ? '' : 'Settings'}
        </button>
      </div>
      
      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏•‡πà‡∏≤‡∏á */}
      <div className="text-center">
        <button className="text-gray-700">{isCollapsed ? 'üë§' : 'Account ‚ñº'}</button>
      </div>
    </div>
  );
}
